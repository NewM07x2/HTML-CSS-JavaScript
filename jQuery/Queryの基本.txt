◯jQueryの基本
メソッド一覧
http://www.kantenna.com/reference/jquery/api/

・できること
アニメーションをつける
ユーザーの行動に応じたインタラクティブなデザインを実現することができる。

そもそもjQueryはJavaScriptのライブラリの1つである。
なのでjQueryを学ぶにはJavaScriptを学んどいた方が無難。
実装することにはよってユーザーのクリックに反応して表示されるフォームや、
アニメーションなど、HTMLとCSSだけでは実現できなかった様々な動きを
表現することができる！！！

・書き方
jQueryの操作は非常に直感的かつシンプルです。
jQueryの使い方は、
①jQueryオブジェクトを作成。
②そのjQueryオブジェクトに対してメソッド（機能）を呼び出す。
という2つが基本になります。
jQueryはJavaScript（JS）なので、
文末にセミコロンが必要です。
またコメントもJS同様に//を用います。 

＜基本形＞
＄('セレクタ').メソッド(引数);
セレクタ：何を？＝オブジェクト生成
メソッド：どうする？＝呼び出し
といった呼び出し方になる。

書く場所はjsファイル内に書くこと
例
$(function() {
  // 以下で、hideメソッドを用いて<h1>要素を隠してください
  $('h1').hide();
});

jQueryオブジェクトは、
$('h1等')とするだけで作成できます。
セレクタにはHTMLのタグ名やclass名などを指定し、
それに合致したHTMLの要素がjQueryオブジェクトになります。
セレクタはCSSセレクタ（CSSで使用するセレクタ）と同じなので、
CSSの知識さえあれば直感的に操作できます。

メソッドとは、便利な機能のことです。
jQueryのメソッドは前述のjQueryオブジェクトでしか利用できません。
メソッドを使うと、jQueryオブジェクトの内容（HTMLの要素）を変更したり、
アニメーションをつけたりすることができます。
メソッドは$('セレクタ').メソッドというように、
”ドット”に続けて呼び出します。

・アニメーション付きで要素を隠す（1）
hideメソッドに似たものとしてfadeOutメソッドがあります。
fadeOutメソッドを用いると、要素を隠す際に、
アニメーションを付けることができます。 
fadeOutメソッドは、後ろの()内に引数として、アニメーションの速度を指定できます。
ミリ秒での指定や、文字列での指定が可能です。 

・アニメーション付きで要素を隠す（2）
slideUpメソッドを用いても、アニメーション付きで要素を隠すことができます。
fadeOutと異なるアニメーションを実現できます。 
また、slideUpメソッドも、後ろの()内に引数として、
アニメーションの速度を指定できます。 

例
$(function() {
//   // 以下で、fadeOutメソッドを用いて<img>要素を隠してください
  $('img').fadeOut();
  
//   // 以下で、slideUpメソッドを用いて<p>要素を隠してください
  $('p').slideUp();  
});

◯classとid について
idはclassと同じように使いますが、classとの違いとして、
一つのページ内で同じid名を複数回使うことはできません。
idはclassと同様、下図のように指定します。

classとidをセレクタにするには下図のようにします。
CSSのセレクタと同様にclass名の前にはドット（.）、
id名の前にはシャープ（#）を用います。
idは同一ページに一箇所しか存在しないので、
jQueryの処理が高速化されます。
jQueryオブジェクトのセレクタにはできるだけidを用いるようにしましょう。 
例
test1.html参照
$(function() {
  // slideUpメソッドを用いて、「#title」の要素を隠してください
  $('#title').slideUp();
  
  // fadeOutメソッドを用いて、「.lesson-item」の要素を隠してください
  $('.lesson-item').fadeOut();
});

・displayプロパティ
CSSにはdisplayプロパティというものがあります。
「display: none;」とすると要素を隠すことができます
（displayプロパティに関して、詳しくはHTML&CSS中級編を参照してください）。

・隠れた要素を表示しよう
隠れた要素を表示するメソッドとして、showメソッドがあります。
表示したい要素に対し、$('セレクタ').show();と指定することで
隠れた要素を表示できます。 
hideメソッドと合わせてセットで覚えるとよいでしょう。 

・アニメーション付きで要素を表示
fadeOutの反対としてfadeInメソッド、
slideUpメソッドの反対としてslideDownメソッドがあります。
どちらもアニメーション付きで隠れた要素を表示することができます。

・イベントとは
イベントを用いると、ある処理を行うタイミングを設定できます。
WEBページ内で、ユーザーによってクリックなどの操作が行われた時、
予めイベント内に指定した処理を実行します。
イベントの構文は、
$('セレクタ').イベント名(function(){ 〜処理〜 });
のように書きます。

・clickイベント
clickイベントを用いると、「セレクタがクリックされた時に処理をする」ことができます。 
例えば、ボタンをクリックしたときに関連する文章を表示する、
といったイベントを設定できます。
下図の例では、ボタンをクリックすると文章を隠すというイベントを作成しています。 

例：test3系を参照
 
・cssメソッドとは
cssメソッドは、CSSを変更できるメソッドです。
1つ目の引数にCSSのプロパティを、
2つ目の引数にプロパティの値をいれます。 

・cssメソッドで色を変えよう
cssメソッドで要素の文字の色を変更したいときは、
$('セレクタ').css('color', 'red');のように記述します。
widthやfont-sizeなど他のプロパティもすべてcssメソッドで変更することができます。 

・cssメソッドで要素を隠す、表示する
cssメソッドでdisplayプロパティの値を変更することもできます。
$('セレクタ').css('display', 'none');はhideメソッドと全く同じです。
このようにhideメソッドやshowメソッドは、
実はdisplayプロパティの値を変更しているだけだということを覚えておきましょう。 

復習
イベントを定義する方法
$('セレクタ').イベント名(function(){ })
cssメソッドを用いて要素のcssを変更する方法
$('セレクタ').css('プロパティ', '値');

・HTMLを変更する(1)- textメソッド
jQueryではCSSだけでなく、
textメソッドを用いることでHTMLそのものを
変更することも出来ます。
textメソッドは、
$('セレクタ').text('書き換える文字列');
のように記述します。

・HTMLを変更する(2)-htmlメソッド
htmlメソッドは、要素の中身のHTMLを書き換えることが出来ます。
textメソッドと違い、htmlメソッドの引数は、単なる文字列ではなくHTMLだということ。
例えばtextメソッドで行うと、<span>タグもそのまま文字列としてブラウザに表示されますが、htmlメソッドなら<span>タグがHTMLタグと認識され、
ブラウザには「こんばんは」とだけ表示される。

例test５参照

・thisの構文
$(this)はイベントの中で、そのイベントが起こった要素を取得することができます。
$()の中でthisをクオート（"や'）で囲まないことに注意してください。
$(this)は非常に重要な概念なので覚えておきましょう。 

使い方
複数のli要素にclickイベントが設定されていた場合、
クリックされた時に、実際にクリックされたli要素にだけ処理を行いたい場合、
クリックされたliタグをthisを用いて、取得する。

・変数を使おう
同じjQueryオブジェクトを複数回使用する時は変数にしましょう。
コードが見やすくなる上、jQueryの処理が高速化されます。 
JavaScriptと同じく、jQueryで変数宣言にはvarを用います。
変数には文字列や数値、jQueryオブジェクトなどを格納することができますが、
jQueryオブジェクトを格納する時は、わかりやすいように変数の頭に
$を付けるのが慣例となっています。 

・メソッドチェーンを使おう
同じjQueryオブジェクトを複数回使用する時は、
メソッドチェーンを使うことでも処理速度を高速化できます。 
メソッドチェーンとは1つのjQueryオブジェクトに連続してメソッドが利用できる構文です。
$('セレクタ').メソッド().メソッド()...のように書くことで、
それぞれのメソッドが適用されます。 

test7参照

・子要素を取得しよう(1)-findメソッド
findメソッドは、すべての子孫要素(自分よりも下の階層の要素すべて）の中から、
指定したセレクタを持つ要素を取得したいときに用います。
$('セレクタ').find('子孫要素');
としてやつやると、
セレクタの中にあるすべての<子要素>を取得することができます。

・子要素を取得しよう(2)-childrenメソッド
childrenメソッドは、指定したセレクタが持つ子要素（一階層だけ下）の中から
指定したセレクタに合致した要素を取得したいときに用います。
$('セレクタ').children('子要素');
とするとセレクタ内の<子要素>タグが一つ取得されます。

test8参照

・hoverイベント
hoverイベントとは、要素にマウスが乗った時、
外れた時に指定した処理を行うイベントです。
$('セレクタ').hover(マウスをのせた時の処理, マウスをはずした時の処理);
のように書きます。clickイベントと違い、引数を2つ書くことに注意しましょう。
引数の間はコンマで区切ります。

hoverイベントを作成する方法
$('セレクタ').hover(
  function() {
    // カーソルをのせた時の処理
  },
  function() {
    // カーソルをはずした時の処理
  }
);
